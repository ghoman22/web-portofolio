# Enhanced SSL-ready server configuration
server {
    listen 80;
    server_name goman.ngenz.org www.goman.ngenz.org;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name goman.ngenz.org www.goman.ngenz.org;

    # SSL configuration (certbot will manage these paths)
    ssl_certificate /etc/letsencrypt/live/goman.ngenz.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/goman.ngenz.org/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # HSTS (optional, but recommended)
    add_header Strict-Transport-Security "max-age=31536000" always;

    root /var/www/portfolio;
    index index.html;

    # Enhanced security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data:; connect-src 'self';" always;

    # Main route handling - serve index.html for root
    location = / {
        try_files /index.html =404;
    }

    # Clean URL routes
    location = /about {
        try_files /about.html =404;
    }

    location = /skills {
        try_files /skills.html =404;
    }

    location = /contact {
        try_files /contact.html =404;
    }

    location = /blogs {
        try_files /blogs.html =404;
    }

    # Blog post clean URLs
    location ~ ^/blog/([a-zA-Z0-9\-]+)$ {
        try_files /blog/$1.html =404;
    }

    # Handle other static files normally
    location / {
        try_files $uri $uri/ =404;
    }

    # Redirects from old URLs to new clean URLs
    location = /index.html {
        return 301 /;
    }

    location = /about.html {
        return 301 /about;
    }

    location = /skills.html {
        return 301 /skills;
    }

    location = /contact.html {
        return 301 /contact;
    }

    location = /blogs.html {
        return 301 /blogs;
    }

    # Blog post HTML redirects
    location ~ ^/blog/([a-zA-Z0-9\-]+)\.html$ {
        return 301 /blog/$1;
    }

    # Favicon handling
    location = /favicon.ico {
        try_files /favicon.ico /favicon-32x32.png;
        access_log off;
        log_not_found off;
    }

    # Static assets with enhanced caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
    }

    # Let's Encrypt challenge directory (fallback for renewals)
    location /.well-known/acme-challenge/ {
        root /var/www/portfolio;
    }

    # Enhanced gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Rate limiting for security
    limit_req_zone $binary_remote_addr zone=main:10m rate=10r/s;
    limit_req zone=main burst=20 nodelay;
}
}